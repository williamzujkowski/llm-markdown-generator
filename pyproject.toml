[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "llm-markdown-generator"
version = "0.1.0"
description = "Framework that leverages LLMs to generate markdown blog posts with customizable front matter"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "typer>=0.9.0",
    "pyyaml>=6.0",
    "jinja2>=3.1.2",
    "python-dotenv>=1.0.0",
    "requests>=2.28.0",
    "rich>=13.3.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
# Point to the typer app in new-cli.py (assuming the file is moved/renamed appropriately later)
# For now, assuming new-cli.py is run directly or via a wrapper.
# If new-cli.py is intended as the main entry point, it needs adjustment
# or this needs to point to a function within it that runs the typer app.
# Example if new-cli.py is moved to src/llm_markdown_generator/new_cli.py:
# llm-markdown = "llm_markdown_generator.new_cli:app"
# For now, commenting out the old entry point. A proper entry point needs setup.
# llm-markdown = "llm_markdown_generator.cli:main" # Old entry point

[tool.setuptools]
package-dir = {"" = "src"}

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
